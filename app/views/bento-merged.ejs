<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bento Dashboard</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=Noto+Serif+JP:wght@400;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        /* Global styles */
        :root {
            --primary-color: #FF6B6B;
            --secondary-color: #4361EE;
            --accent-color: #9C27B0;
            --text-color: #2D3748;
            --light-text: #F7FAFC;
            --bg-color: #EDF2F7;
            --shadow-color: rgba(0, 0, 0, 0.15);
            --blur-amount: 12px;
            --border-radius: 20px;
            --grid-gap: 25px;
            --transition-speed: 0.4s;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        }

        body {
            background-color: var(--bg-color);
            background-image: 
                radial-gradient(circle at 10% 20%, rgba(255, 107, 107, 0.12) 0%, transparent 25%),
                radial-gradient(circle at 90% 60%, rgba(67, 97, 238, 0.12) 0%, transparent 25%),
                radial-gradient(circle at 50% 80%, rgba(156, 39, 176, 0.12) 0%, transparent 25%);
            min-height: 100vh;
            padding: 20px;
            color: var(--text-color);
            transition: background-color 0.5s ease;
        }

        body.dark-mode {
            --bg-color: #1A202C;
            --text-color: #E2E8F0;
            --shadow-color: rgba(0, 0, 0, 0.25);
            background-color: var(--bg-color);
        }

        h1, h2, h3, h4 {
            font-weight: 700;
        }

        .app-container {
            max-width: 1400px;
            margin: 0 auto;
        }

        /* Header styling */
        header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            position: relative;
            z-index: 10;
        }

        .header-title h1 {
            font-size: 2.2rem;
            font-weight: 700;
            display: inline-flex;
            align-items: center;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-right: 10px;
        }

        .header-emoji {
            display: inline-flex;
            margin-left: 8px;
            margin-right: 4px;
            transform: translateY(2px);
            font-size: 1.8rem;
        }

        .header-title p {
            font-size: 1.05rem;
            opacity: 0.8;
            margin-top: 8px;
            display: flex;
            align-items: center;
            flex-wrap: wrap;
            line-height: 1.6;
        }

        .highlight-text {
            background: linear-gradient(120deg, rgba(255, 107, 107, 0.2), rgba(67, 97, 238, 0.2));
            padding: 2px 8px;
            border-radius: 4px;
            margin: 0 4px;
            color: var(--text-color);
            font-weight: 500;
        }

        .dark-mode .highlight-text {
            background: linear-gradient(120deg, rgba(255, 107, 107, 0.3), rgba(67, 97, 238, 0.3));
            color: var(--light-text);
        }

        /* Text with emoji styles for widgets */
        .widget-title-with-emoji {
            display: flex;
            align-items: center;
            gap: 8px;
            font-weight: 700;
            font-size: 18px;
            margin-bottom: 15px;
        }

        .widget-emoji {
            font-size: 22px;
            display: inline-block;
            transform: translateY(1px);
        }

        .widget-meta {
            display: flex;
            align-items: center;
            gap: 12px;
            margin-top: 10px;
            color: rgba(45, 55, 72, 0.7);
            font-size: 13px;
        }

        .dark-mode .widget-meta {
            color: rgba(226, 232, 240, 0.7);
        }

        .widget-tag {
            background: rgba(255, 255, 255, 0.3);
            backdrop-filter: blur(4px);
            -webkit-backdrop-filter: blur(4px);
            padding: 4px 10px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 500;
            color: var(--text-color);
            display: inline-flex;
            align-items: center;
            gap: 6px;
        }

        .dark-mode .widget-tag {
            background: rgba(30, 41, 59, 0.5);
            color: var(--light-text);
        }

        .widget-tag i {
            font-size: 11px;
        }

        .header-controls {
            display: flex;
            gap: 15px;
        }

        /* Button styles */
        .btn {
            padding: 10px 16px;
            border-radius: 12px;
            font-weight: 600;
            cursor: pointer;
            border: none;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .btn-primary {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
            box-shadow: 0 4px 12px rgba(67, 97, 238, 0.3);
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 16px rgba(67, 97, 238, 0.4);
        }

        .btn-secondary {
            background: rgba(255, 255, 255, 0.8);
            color: var(--text-color);
            backdrop-filter: blur(5px);
            -webkit-backdrop-filter: blur(5px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

        .btn-secondary:hover {
            background: rgba(255, 255, 255, 0.9);
            transform: translateY(-2px);
        }

        /* Dark mode toggle */
        .dark-mode-toggle {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 100;
            background: rgba(255, 255, 255, 0.2);
            border: none;
            width: 50px;
            height: 50px;
            border-radius: 50%;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            backdrop-filter: blur(5px);
            -webkit-backdrop-filter: blur(5px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
        }

        .dark-mode-toggle i {
            font-size: 20px;
            color: var(--text-color);
            transition: all 0.3s ease;
        }

        .dark-mode-toggle:hover {
            transform: scale(1.1);
        }

        /* Glassmorphism effect base */
        .glass {
            background: rgba(255, 255, 255, 0.15);
            backdrop-filter: blur(var(--blur-amount));
            -webkit-backdrop-filter: blur(var(--blur-amount));
            border: 1px solid rgba(255, 255, 255, 0.12);
            box-shadow: 
                0 10px 30px 0 var(--shadow-color),
                inset 0 1px 0 0 rgba(255, 255, 255, 0.1);
            border-radius: var(--border-radius);
            transition: all var(--transition-speed) cubic-bezier(0.165, 0.84, 0.44, 1);
        }

        .dark-mode .glass {
            background: rgba(30, 41, 59, 0.4);
            border: 1px solid rgba(255, 255, 255, 0.08);
        }

        /* Bento Grid Container */
        .bento-container {
            display: grid;
            grid-template-columns: repeat(12, 1fr);
            grid-auto-rows: minmax(100px, auto);
            gap: 20px;
            position: relative;
            min-height: 800px;
            perspective: 1200px;
            transition: all 0.5s cubic-bezier(0.165, 0.84, 0.44, 1);
            padding: 10px;
        }

        /* Predefined widget sizes and positions */
        .widget.small {
            grid-column: span the 3;
            grid-row: span 2;
        }

        .widget.medium {
            grid-column: span 4;
            grid-row: span 3;
        }

        .widget.large {
            grid-column: span 6;
            grid-row: span 4;
        }

        .widget.wide {
            grid-column: span 8;
            grid-row: span 2;
        }

        .widget.tall {
            grid-column: span 3;
            grid-row: span 5;
        }

        .widget.featured {
            grid-column: span 8;
            grid-row: span 5;
        }

        /* Animation for widget appearance */
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes floating {
            0% {
                transform: translateY(0px);
            }
            50% {
                transform: translateY(-8px);
            }
            100% {
                transform: translateY(0px);
            }
        }

        .widget {
            animation: fadeInUp 0.6s cubic-bezier(0.2, 0.8, 0.2, 1) forwards;
            animation-delay: calc(var(--index, 0) * 0.1s);
        }

        .widget.floating {
            animation: fadeInUp 0.6s cubic-bezier(0.2, 0.8, 0.2, 1) forwards,
                       floating 6s ease-in-out infinite;
            animation-delay: calc(var(--index, 0) * 0.1s), 1s;
        }

        /* Widget hover effect */
        .widget:hover:not(.dragging):not(.resizing) {
            transform: translateY(-5px) scale(1.02);
            box-shadow: 
                0 15px 35px rgba(0, 0, 0, 0.1),
                inset 0 1px 0 rgba(255, 255, 255, 0.3);
            z-index: 2;
        }

        /* Widget with progress indicator */
        .widget-progress-container {
            height: 6px;
            background: rgba(0, 0, 0, 0.05);
            border-radius: 3px;
            overflow: hidden;
            margin: 15px 0;
        }

        .widget-progress-bar {
            height: 100%;
            background: linear-gradient(to right, var(--primary-color), var(--secondary-color));
            border-radius: 3px;
            width: var(--progress, 0%);
            transition: width 1s cubic-bezier(0.165, 0.84, 0.44, 1);
        }

        .dark-mode .widget-progress-container {
            background: rgba(255, 255, 255, 0.1);
        }

        /* Responsive adjustments */
        @media (max-width: 1200px) {
            .bento-container {
                grid-template-columns: repeat(8, 1fr);
            }
            
            .widget.large, .widget.featured {
                grid-column: span 4;
                grid-row: span 3;
            }
            
            .widget.wide {
                grid-column: span 6;
            }
        }

        @media (max-width: 768px) {
            .bento-container {
                grid-template-columns: repeat(4, 1fr);
                grid-auto-rows: minmax(80px, auto);
                gap: 15px;
            }
            
            .widget.small {
                grid-column: span 2;
                grid-row: span 2;
            }
            
            .widget.medium, .widget.large, .widget.wide, .widget.featured {
                grid-column: span 4;
                grid-row: span 3;
            }
            
            .widget.tall {
                grid-column: span 2;
                grid-row: span 4;
            }
        }

        @media (max-width: 480px) {
            .bento-container {
                grid-template-columns: repeat(2, 1fr);
                gap: 10px;
            }
            
            .widget {
                grid-column: span 2 !important;
                grid-row: span 2 !important;
            }
        }

        /* Widget styling (merges bento-item and widget) */
        .widget {
            padding: 25px;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            overflow: hidden;
            position: relative;
            transform-style: preserve-3d;
            transform: translateZ(0);
        }

        /* Updated modern skeuomorphic styles for widgets */
        .widget {
            background: rgba(255, 255, 255, 0.7);
            border-radius: var(--border-radius);
            box-shadow: 
                0 10px 30px 0 var(--shadow-color),
                inset 0 1px 0 0 rgba(255, 255, 255, 0.9);
            transition: all 0.3s cubic-bezier(0.2, 0.8, 0.2, 1);
            background-image: 
                linear-gradient(to bottom, rgba(255, 255, 255, 0.8), rgba(255, 255, 255, 0.5));
            border: 1px solid rgba(255, 255, 255, 0.2);
            backdrop-filter: blur(var(--blur-amount));
            -webkit-backdrop-filter: blur(var(--blur-amount));
        }

        .dark-mode .widget {
            background: rgba(30, 41, 59, 0.7);
            background-image: 
                linear-gradient(to bottom, rgba(40, 50, 70, 0.8), rgba(30, 40, 60, 0.6));
            box-shadow: 
                0 10px 30px 0 rgba(0, 0, 0, 0.3),
                inset 0 1px 0 0 rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(255, 255, 255, 0.05);
        }

        /* Metal shader effect for certain widgets */
        .widget.metal {
            background-image: 
                linear-gradient(145deg, rgba(250, 250, 250, 0.8) 0%, rgba(225, 225, 225, 0.6) 47%, rgba(210, 210, 210, 0.8) 100%);
            box-shadow: 
                0 10px 25px rgba(0, 0, 0, 0.12),
                inset 0 -4px 5px rgba(0, 0, 0, 0.05),
                inset 0 1px 0 rgba(255, 255, 255, 0.8);
            border: 1px solid rgba(200, 200, 200, 0.3);
        }

        .dark-mode .widget.metal {
            background-image: 
                linear-gradient(145deg, rgba(60, 70, 80, 0.8) 0%, rgba(50, 60, 70, 0.6) 47%, rgba(40, 50, 60, 0.8) 100%);
            box-shadow: 
                0 10px 25px rgba(0, 0, 0, 0.2),
                inset 0 -4px 5px rgba(0, 0, 0, 0.1),
                inset 0 1px 0 rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(70, 80, 90, 0.3);
        }

        /* Glass effect for certain widgets */
        .widget.glass {
            background: rgba(255, 255, 255, 0.15);
            backdrop-filter: blur(calc(var(--blur-amount) * 1.5));
            -webkit-backdrop-filter: blur(calc(var(--blur-amount) * 1.5));
            border: 1px solid rgba(255, 255, 255, 0.3);
            box-shadow: 
                0 15px 35px rgba(0, 0, 0, 0.1),
                inset 0 1px 0 rgba(255, 255, 255, 0.3);
        }

        .dark-mode .widget.glass {
            background: rgba(30, 41, 59, 0.25);
            border: 1px solid rgba(255, 255, 255, 0.05);
            box-shadow: 
                0 15px 35px rgba(0, 0, 0, 0.25),
                inset 0 1px 0 rgba(255, 255, 255, 0.05);
        }

        /* Widget button with tactile feel */
        .widget-button {
            padding: 10px 16px;
            background: rgba(255, 255, 255, 0.9);
            border-radius: 10px;
            box-shadow: 
                0 2px 8px rgba(0, 0, 0, 0.1),
                inset 0 -2px 0 rgba(0, 0, 0, 0.05),
                inset 0 1px 0 rgba(255, 255, 255, 0.8);
            border: 1px solid rgba(0, 0, 0, 0.05);
            font-weight: 500;
            font-size: 14px;
            color: var(--text-color);
            cursor: pointer;
            transition: all 0.2s;
            text-align: center;
        }

        .widget-button:active {
            transform: translateY(2px);
            box-shadow: 
                0 1px 2px rgba(0, 0, 0, 0.1),
                inset 0 -1px 0 rgba(0, 0, 0, 0.05);
        }

        .dark-mode .widget-button {
            background: rgba(40, 50, 70, 0.9);
            box-shadow: 
                0 2px 8px rgba(0, 0, 0, 0.2),
                inset 0 -2px 0 rgba(0, 0, 0, 0.1),
                inset 0 1px 0 rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(255, 255, 255, 0.05);
            color: var(--light-text);
        }

        /* Widget with interactive 3D styling */
        .widget.interactive-3d {
            transform-style: preserve-3d;
            perspective: 1000px;
            transform: translateZ(0);
            transition: transform 0.4s cubic-bezier(0.2, 0.8, 0.2, 1);
        }

        .widget.interactive-3d:hover {
            transform: translateY(-10px) rotateX(2deg) rotateY(2deg) scale(1.03);
        }

        .widget.interactive-3d .widget-content {
            transform: translateZ(20px);
            transition: transform 0.4s cubic-bezier(0.2, 0.8, 0.2, 1);
        }

        .widget.interactive-3d:hover .widget-content {
            transform: translateZ(40px);
        }

        /* Widget title with subtle tactile feel */
        .widget-title {
            font-weight: 700;
            font-size: 18px;
            margin-bottom: 15px;
            background: linear-gradient(135deg, var(--text-color), rgba(45, 55, 72, 0.9));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            position: relative;
            z-index: 1;
        }

        .dark-mode .widget-title {
            background: linear-gradient(135deg, rgba(237, 242, 247, 0.95), rgba(226, 232, 240, 0.85));
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        /* Widget icon with modern glassy effect */
        .widget-icon {
            width: 45px;
            height: 45px;
            border-radius: 12px;
            background: rgba(255, 255, 255, 0.9);
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 15px;
            font-size: 20px;
            color: var(--primary-color);
            position: relative;
            overflow: hidden;
            box-shadow: 
                0 8px 15px rgba(0, 0, 0, 0.1),
                inset 0 -2px 0 rgba(0, 0, 0, 0.05);
        }

        .widget-icon::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 50%;
            background: linear-gradient(to bottom, rgba(255, 255, 255, 0.7), rgba(255, 255, 255, 0));
            border-radius: 12px 12px 24px 24px;
        }

        .dark-mode .widget-icon {
            background: rgba(40, 50, 70, 0.9);
            box-shadow: 
                0 8px 15px rgba(0, 0, 0, 0.2),
                inset 0 -2px 0 rgba(0, 0, 0, 0.1);
        }

        .dark-mode .widget-icon::before {
            background: linear-gradient(to bottom, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0));
        }

        /* Widget header */
        .widget-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            cursor: move;
        }

        .widget-title {
            font-weight: 600;
            font-size: 1.2rem;
            transition: transform 0.3s ease;
            position: relative;
            z-index: 2;
        }

        .widget:hover .widget-title {
            transform: translateY(-3px);
        }

        .widget-actions {
            display: flex;
            gap: 8px;
            z-index: 5;
        }

        .widget-action-btn {
            background: none;
            border: none;
            font-size: 0.9rem;
            cursor: pointer;
            color: #555;
            width: 28px;
            height: 28px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.2s;
            position: relative;
            z-index: 10;
        }

        .widget-action-btn:hover {
            background-color: rgba(0, 0, 0, 0.05);
            color: var(--primary-color);
            transform: scale(1.1);
        }

        /* Widget content */
        .widget-content {
            flex: 1;
            position: relative;
            overflow: hidden;
            z-index: 2;
            font-size: 1rem;
            line-height: 1.6;
            transition: opacity 0.3s ease;
            opacity: 0.9;
        }

        .widget:hover .widget-content {
            opacity: 1;
        }

        /* AI Element Styling */
        .ai-icon {
            font-size: 28px;
            margin-bottom: 15px;
            transition: all 0.3s ease;
            position: relative;
            z-index: 2;
        }

        .ai-icon i {
            transition: transform 0.5s ease;
        }

        .widget:hover .ai-icon i {
            transform: scale(1.1) rotate(5deg);
        }

        .ai-pattern {
            position: absolute;
            bottom: -20px;
            right: -20px;
            width: 150px;
            height: 150px;
            opacity: 0.15;
            z-index: 1;
            background-image: url("data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M50 25L75 50L50 75L25 50L50 25Z' fill='%234361EE'/%3E%3C/svg%3E");
            background-size: 80px 80px;
            transition: transform 0.5s ease;
        }

        .widget:hover .ai-pattern {
            transform: rotate(10deg) scale(1.2);
        }

        .ai-badge {
            display: inline-flex;
            align-items: center;
            background-color: rgba(255, 255, 255, 0.15);
            padding: 6px 12px;
            border-radius: 30px;
            font-size: 0.8rem;
            font-weight: 600;
            margin-top: 20px;
            color: var(--light-text);
            backdrop-filter: blur(4px);
            -webkit-backdrop-filter: blur(4px);
            transition: all 0.3s ease;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            z-index: 2;
        }

        .widget:hover .ai-badge {
            background-color: rgba(255, 255, 255, 0.2);
            transform: translateY(-3px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.12);
        }

        .ai-badge::before {
            content: "";
            display: inline-block;
            width: 8px;
            height: 8px;
            border-radius: 50%;
            background-color: var(--primary-color);
            margin-right: 8px;
            animation: pulse 2s infinite;
        }

        /* Japanese-inspired styling elements */
        .kanji-watermark {
            position: absolute;
            font-family: "Noto Serif JP", serif;
            font-size: 140px;
            opacity: 0.04;
            bottom: -30px;
            right: 10px;
            z-index: 1;
            transition: all 0.8s ease;
            pointer-events: none;
        }

        .widget:hover .kanji-watermark {
            opacity: 0.07;
            transform: translateY(-5px) rotate(3deg);
        }

        /* Wave pattern */
        .wave-pattern {
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 50px;
            background-image: url("data:image/svg+xml,%3Csvg width='100' height='25' viewBox='0 0 100 25' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0 10 C 30 25, 70 0, 100 10 L 100 0 L 0 0 Z' fill='rgba(255,255,255,0.1)'/%3E%3C/svg%3E");
            background-size: 100px 25px;
            background-repeat: repeat-x;
            transition: transform 0.5s ease;
            pointer-events: none;
        }

        .widget:hover .wave-pattern {
            transform: translateX(10px);
        }

        /* Resize handle */
        .resize-handle {
            position: absolute;
            width: 20px;
            height: 20px;
            bottom: 0;
            right: 0;
            cursor: nwse-resize;
            z-index: 10;
            opacity: 0.5;
            transition: opacity 0.3s;
        }

        .resize-handle::before {
            content: '';
            position: absolute;
            bottom: 4px;
            right: 4px;
            width: 12px;
            height: 12px;
            border-bottom: 2px solid var(--text-color);
            border-right: 2px solid var(--text-color);
            opacity: 0.7;
        }

        .dark-mode .resize-handle::before {
            border-color: var(--light-text);
        }

        .widget:hover .resize-handle {
            opacity: 1;
        }

        /* Widget themes */
        .widget-theme-primary {
            background: linear-gradient(135deg, rgba(67, 97, 238, 0.85) 0%, rgba(58, 12, 163, 0.85) 100%);
            color: white;
        }

        .widget-theme-primary .widget-action-btn {
            color: rgba(255, 255, 255, 0.7);
        }

        .widget-theme-primary .widget-action-btn:hover {
            background-color: rgba(255, 255, 255, 0.1);
            color: white;
        }

        .widget-theme-accent {
            background: linear-gradient(135deg, rgba(247, 37, 133, 0.85) 0%, rgba(181, 23, 158, 0.85) 100%);
            color: white;
        }

        .widget-theme-accent .widget-action-btn {
            color: rgba(255, 255, 255, 0.7);
        }

        .widget-theme-accent .widget-action-btn:hover {
            background-color: rgba(255, 255, 255, 0.1);
            color: white;
        }

        /* Dragging and resizing states */
        .widget.dragging {
            opacity: 0.9;
            z-index: 100;
            box-shadow: 0 12px 48px rgba(0, 0, 0, 0.2);
            cursor: grabbing;
            transition: none;
        }

        .widget.resizing {
            transition: none;
            z-index: 100;
        }

        /* Ghost element for drag preview */
        .ghost-widget {
            position: absolute;
            background: rgba(67, 97, 238, 0.2);
            border: 2px dashed var(--secondary-color);
            border-radius: var(--border-radius);
            z-index: 10;
            pointer-events: none;
        }

        /* Resize placeholder */
        .resize-placeholder {
            position: absolute;
            background: rgba(67, 97, 238, 0.2);
            border: 2px dashed var(--secondary-color);
            border-radius: var(--border-radius);
            z-index: 10;
            pointer-events: none;
        }

        /* Modal for adding widgets */
        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.3);
            backdrop-filter: blur(5px);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 1000;
            opacity: 0;
            visibility: hidden;
            transition: opacity 0.3s, visibility 0.3s;
        }

        .modal-overlay.active {
            opacity: 1;
            visibility: visible;
        }

        .modal-content {
            border-radius: 16px;
            width: 95%;
            max-width: 500px;
            padding: 24px;
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .modal-header h2 {
            font-size: 1.5rem;
            font-weight: 600;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .modal-close {
            background: none;
            border: none;
            font-size: 1.5rem;
            cursor: pointer;
            color: #888;
            transition: color 0.2s;
        }

        .modal-close:hover {
            color: var(--dark-color);
            transform: rotate(90deg);
        }

        .modal-body {
            margin-bottom: 24px;
        }

        .form-group {
            margin-bottom: 16px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: var(--text-color);
        }

        .form-group input,
        .form-group select {
            width: 100%;
            padding: 12px;
            border: 1px solid rgba(0, 0, 0, 0.1);
            border-radius: 10px;
            font-size: 1rem;
            background: rgba(255, 255, 255, 0.8);
            backdrop-filter: blur(5px);
            -webkit-backdrop-filter: blur(5px);
            transition: border-color 0.2s, box-shadow 0.2s;
        }

        .form-group input:focus,
        .form-group select:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.15);
        }

        .form-row {
            display: flex;
            gap: 16px;
        }

        .form-row .form-group {
            flex: 1;
        }

        .modal-footer {
            display: flex;
            justify-content: flex-end;
            gap: 12px;
        }

        /* Animations */
        @keyframes pulse {
            0% { opacity: 1; transform: scale(1); }
            50% { opacity: 0.7; transform: scale(1.2); }
            100% { opacity: 1; transform: scale(1); }
        }

        .floating {
            animation: floating 6s ease-in-out infinite;
        }

        @keyframes floating {
            0% { transform: translateY(0px) rotate(0deg); }
            25% { transform: translateY(-8px) rotate(3deg); }
            50% { transform: translateY(0px) rotate(0deg); }
            75% { transform: translateY(8px) rotate(-3deg); }
            100% { transform: translateY(0px) rotate(0deg); }
        }

        /* Entry animations */
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .widget {
            opacity: 0;
            animation: fadeInUp 0.8s forwards;
        }

        /* Particles */
        .particles {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: -1;
        }

        .particle {
            position: absolute;
            border-radius: 50%;
            opacity: 0.5;
            animation: particleFloat 15s infinite linear;
        }

        @keyframes particleFloat {
            0% { transform: translateY(0) rotate(0deg); }
            100% { transform: translateY(-100vh) rotate(360deg); }
        }

        /* Glow effect */
        .glow-effect {
            position: absolute;
            width: 100%;
            height: 100%;
            border-radius: var(--border-radius);
            top: 0;
            left: 0;
            background: radial-gradient(circle at 50% 50%, rgba(255, 255, 255, 0.1), transparent 60%);
            opacity: 0;
            transition: opacity 0.5s ease;
            z-index: 1;
            pointer-events: none;
        }

        .widget:hover .glow-effect {
            opacity: 1;
        }

        /* Command palette styles */
        .command-palette {
            position: fixed;
            top: 30%;
            left: 50%;
            transform: translate(-50%, -50%) scale(0.95);
            width: 600px;
            max-width: 90vw;
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(20px);
            -webkit-backdrop-filter: blur(20px);
            border-radius: 12px;
            box-shadow: 0 10px 40px rgba(0, 0, 0, 0.15), 0 0 0 1px rgba(0, 0, 0, 0.05);
            z-index: 1000;
            opacity: 0;
            visibility: hidden;
            transition: all 0.2s ease;
            overflow: hidden;
        }

        .command-palette.active {
            opacity: 1;
            visibility: visible;
            transform: translate(-50%, -50%) scale(1);
        }

        .command-input {
            width: 100%;
            padding: 16px 20px;
            border: none;
            outline: none;
            background: transparent;
            font-size: 16px;
            color: var(--text-color);
            border-bottom: 1px solid rgba(0, 0, 0, 0.1);
        }

        .dark-mode .command-palette {
            background: rgba(30, 41, 59, 0.9);
            box-shadow: 0 10px 40px rgba(0, 0, 0, 0.3), 0 0 0 1px rgba(255, 255, 255, 0.05);
        }

        .dark-mode .command-input {
            color: var(--light-text);
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }

        .command-results {
            max-height: 400px;
            overflow-y: auto;
        }

        .command-item {
            padding: 12px 20px;
            display: flex;
            align-items: center;
            cursor: pointer;
            transition: background 0.2s;
        }

        .command-item:hover, .command-item.selected {
            background: rgba(0, 0, 0, 0.05);
        }

        .dark-mode .command-item:hover, .dark-mode .command-item.selected {
            background: rgba(255, 255, 255, 0.05);
        }

        .command-icon {
            width: 24px;
            height: 24px;
            margin-right: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--primary-color);
        }

        .command-text {
            flex: 1;
        }

        .command-title {
            font-size: 14px;
            font-weight: 500;
            margin-bottom: 2px;
        }

        .command-description {
            font-size: 12px;
            opacity: 0.7;
        }

        .command-shortcut {
            display: flex;
            align-items: center;
            gap: 6px;
        }

        .key {
            background: rgba(0, 0, 0, 0.1);
            padding: 2px 6px;
            border-radius: 4px;
            font-size: 11px;
            font-weight: 500;
            min-width: 20px;
            text-align: center;
        }

        .dark-mode .key {
            background: rgba(255, 255, 255, 0.1);
        }

        /* Command palette backdrop */
        .command-backdrop {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.2);
            backdrop-filter: blur(2px);
            z-index: 999;
            opacity: 0;
            visibility: hidden;
            transition: all 0.2s ease;
        }

        .command-backdrop.active {
            opacity: 1;
            visibility: visible;
        }

        /* Search button in header */
        .search-button {
            display: flex;
            align-items: center;
            gap: 8px;
            padding: 10px 16px;
            background: rgba(255, 255, 255, 0.8);
            border-radius: 12px;
            border: 1px solid rgba(0, 0, 0, 0.1);
            cursor: pointer;
            transition: all 0.3s;
            color: var(--text-color);
            font-size: 14px;
            backdrop-filter: blur(5px);
            -webkit-backdrop-filter: blur(5px);
        }

        .search-button:hover {
            background: rgba(255, 255, 255, 0.9);
            transform: translateY(-2px);
        }

        .search-shortcut {
            display: flex;
            align-items: center;
            opacity: 0.6;
            margin-left: 8px;
        }

        .dark-mode .search-button {
            background: rgba(30, 41, 59, 0.5);
            border: 1px solid rgba(255, 255, 255, 0.1);
            color: var(--light-text);
        }

        .dark-mode .search-button:hover {
            background: rgba(30, 41, 59, 0.7);
        }

        /* AI presence styling */
        .ai-presence {
            position: relative;
            padding: 15px;
            border-radius: 14px;
            background: linear-gradient(to right, rgba(64, 120, 255, 0.1), rgba(120, 80, 255, 0.15));
            border: 1px solid rgba(255, 255, 255, 0.2);
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
            overflow: hidden;
            margin-top: 20px;
        }

        .ai-presence::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: 
                radial-gradient(circle at 20% 50%, rgba(64, 120, 255, 0.15), transparent 25%),
                radial-gradient(circle at 80% 30%, rgba(120, 80, 255, 0.15), transparent 25%);
            opacity: 0.7;
            z-index: 0;
        }

        .dark-mode .ai-presence {
            background: linear-gradient(to right, rgba(64, 120, 255, 0.2), rgba(120, 80, 255, 0.25));
            border: 1px solid rgba(255, 255, 255, 0.1);
        }

        .ai-presence-content {
            position: relative;
            z-index: 1;
        }

        .ai-bubble {
            display: flex;
            align-items: center;
            gap: 10px;
            padding: 12px 15px 12px 12px;
            background: rgba(255, 255, 255, 0.9);
            border-radius: 20px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
            margin-bottom: 10px;
            position: relative;
            backdrop-filter: blur(8px);
            -webkit-backdrop-filter: blur(8px);
        }

        .ai-avatar {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            background: linear-gradient(135deg, #4378ff, #7850ff);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 14px;
            box-shadow: 0 4px 8px rgba(67, 120, 255, 0.3);
        }

        .ai-message {
            flex: 1;
            font-size: 14px;
            line-height: 1.5;
        }

        .dark-mode .ai-bubble {
            background: rgba(30, 41, 59, 0.8);
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
        }

        .ai-actions {
            display: flex;
            gap: 8px;
            margin-top: 10px;
        }

        .ai-action-btn {
            background: rgba(255, 255, 255, 0.8);
            border: 1px solid rgba(0, 0, 0, 0.05);
            border-radius: 20px;
            padding: 6px 12px;
            font-size: 13px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.2s;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
        }

        .ai-action-btn:hover {
            background: rgba(255, 255, 255, 0.95);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.08);
        }

        .dark-mode .ai-action-btn {
            background: rgba(30, 41, 59, 0.6);
            border: 1px solid rgba(255, 255, 255, 0.05);
            color: var(--light-text);
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        .dark-mode .ai-action-btn:hover {
            background: rgba(30, 41, 59, 0.8);
        }

        .ai-input {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-top: 15px;
        }

        .ai-input-field {
            flex: 1;
            padding: 12px 15px;
            border-radius: 18px;
            border: 1px solid rgba(0, 0, 0, 0.1);
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(8px);
            -webkit-backdrop-filter: blur(8px);
            font-size: 14px;
            transition: all 0.3s;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
        }

        .ai-input-field:focus {
            outline: none;
            border-color: rgba(67, 120, 255, 0.5);
            box-shadow: 0 4px 12px rgba(67, 120, 255, 0.1);
        }

        .dark-mode .ai-input-field {
            background: rgba(30, 41, 59, 0.7);
            border: 1px solid rgba(255, 255, 255, 0.1);
            color: var(--light-text);
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
        }

        .ai-input-btn {
            background: linear-gradient(135deg, #4378ff, #7850ff);
            color: white;
            border: none;
            width: 36px;
            height: 36px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s;
            box-shadow: 0 4px 8px rgba(67, 120, 255, 0.3);
        }

        .ai-input-btn:hover {
            transform: scale(1.1);
            box-shadow: 0 6px 12px rgba(67, 120, 255, 0.4);
        }
        
        /* Interactive 3D Object */
        .interactive-3d-object {
            position: relative;
            width: 100%;
            height: 180px;
            perspective: 800px;
            margin: 20px 0;
            cursor: grab;
        }

        .interactive-3d-object:active {
            cursor: grabbing;
        }

        .cube-container {
            width: 100px;
            height: 100px;
            position: absolute;
            top: 50%;
            left: 50%;
            transform-style: preserve-3d;
            transform: translate(-50%, -50%) rotateX(-20deg) rotateY(-20deg);
            transition: transform 0.5s cubic-bezier(0.215, 0.61, 0.355, 1);
        }

        .cube-face {
            position: absolute;
            width: 100px;
            height: 100px;
            border: 1px solid rgba(255, 255, 255, 0.3);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 24px;
            color: white;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(5px);
            -webkit-backdrop-filter: blur(5px);
            box-shadow: inset 0 0 20px rgba(255, 255, 255, 0.1);
            opacity: 0.9;
        }

        .cube-face:nth-child(1) { transform: translateZ(50px); background: rgba(255, 107, 107, 0.6); }
        .cube-face:nth-child(2) { transform: rotateY(180deg) translateZ(50px); background: rgba(67, 97, 238, 0.6); }
        .cube-face:nth-child(3) { transform: rotateY(90deg) translateZ(50px); background: rgba(156, 39, 176, 0.6); }
        .cube-face:nth-child(4) { transform: rotateY(-90deg) translateZ(50px); background: rgba(0, 150, 136, 0.6); }
        .cube-face:nth-child(5) { transform: rotateX(90deg) translateZ(50px); background: rgba(255, 193, 7, 0.6); }
        .cube-face:nth-child(6) { transform: rotateX(-90deg) translateZ(50px); background: rgba(33, 150, 243, 0.6); }

        /* Chart with 3D depth */
        .chart-3d-container {
            position: relative;
            width: 100%;
            height: 200px;
            margin: 20px 0;
            perspective: 1000px;
        }

        .chart-3d {
            position: relative;
            width: 100%;
            height: 100%;
            transform-style: preserve-3d;
            transform: rotateX(60deg) rotateZ(-20deg);
        }

        .chart-floor {
            position: absolute;
            width: 100%;
            height: 100%;
            background: rgba(255, 255, 255, 0.1);
            transform: translateZ(-5px);
            border-radius: 5px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            backdrop-filter: blur(5px);
            -webkit-backdrop-filter: blur(5px);
            display: grid;
            grid-template-columns: repeat(12, 1fr);
            grid-template-rows: repeat(12, 1fr);
            gap: 1px;
        }

        .chart-floor-tile {
            background: rgba(255, 255, 255, 0.05);
        }

        .chart-bar {
            position: absolute;
            width: 20px;
            background: linear-gradient(to top, rgba(67, 97, 238, 0.7), rgba(255, 107, 107, 0.7));
            bottom: 0;
            border-radius: 3px 3px 0 0;
            box-shadow: 0 0 20px rgba(67, 97, 238, 0.3);
            transform-style: preserve-3d;
            transform-origin: bottom center;
            transition: height 1s cubic-bezier(0.165, 0.84, 0.44, 1);
        }

        .chart-label {
            position: absolute;
            bottom: -25px;
            font-size: 10px;
            color: var(--text-color);
            text-align: center;
            width: 40px;
            margin-left: -10px;
        }

        .dark-mode .chart-label {
            color: var(--light-text);
        }

        /* Calendar Widget Styles */
        .calendar-events {
            margin: 15px 0;
        }

        .calendar-event {
            display: flex;
            padding: 10px 12px;
            background: rgba(255, 255, 255, 0.5);
            border-radius: 8px;
            margin-bottom: 8px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
            transition: all 0.2s;
        }

        .calendar-event:hover {
            transform: translateX(3px);
            background: rgba(255, 255, 255, 0.7);
        }

        .dark-mode .calendar-event {
            background: rgba(30, 41, 59, 0.5);
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        .dark-mode .calendar-event:hover {
            background: rgba(30, 41, 59, 0.7);
        }

        .event-time {
            font-size: 13px;
            font-weight: 600;
            color: var(--primary-color);
            min-width: 75px;
        }

        .event-title {
            font-size: 14px;
            margin-left: 10px;
        }

        /* Notes Widget Styles */
        .notes-content {
            padding: 15px;
            background: rgba(255, 255, 255, 0.5);
            border-radius: 12px;
            font-size: 14px;
            line-height: 1.6;
            margin: 15px 0;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
        }

        .dark-mode .notes-content {
            background: rgba(30, 41, 59, 0.5);
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        .notes-content p {
            margin-bottom: 10px;
        }

        /* Tasks Widget Styles */
        .tasks-list {
            margin: 15px 0;
        }

        .task-item {
            display: flex;
            align-items: center;
            padding: 12px 15px;
            background: rgba(255, 255, 255, 0.5);
            border-radius: 8px;
            margin-bottom: 8px;
            transition: all 0.2s;
            cursor: pointer;
        }

        .task-item:hover {
            background: rgba(255, 255, 255, 0.7);
            transform: translateX(3px);
        }

        .dark-mode .task-item {
            background: rgba(30, 41, 59, 0.5);
        }

        .dark-mode .task-item:hover {
            background: rgba(30, 41, 59, 0.7);
        }

        .task-checkbox {
            width: 20px;
            height: 20px;
            border: 2px solid rgba(0, 0, 0, 0.2);
            border-radius: 4px;
            margin-right: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 10px;
            color: white;
            transition: all 0.2s;
        }

        .dark-mode .task-checkbox {
            border-color: rgba(255, 255, 255, 0.2);
        }

        .task-item.completed .task-checkbox {
            background: var(--secondary-color);
            border-color: var(--secondary-color);
        }

        .task-item.completed .task-content {
            text-decoration: line-through;
            opacity: 0.7;
        }

        .task-add {
            display: flex;
            margin-top: 15px;
        }

        .task-input {
            flex: 1;
            padding: 10px 15px;
            border-radius: 8px;
            border: 1px solid rgba(0, 0, 0, 0.1);
            background: rgba(255, 255, 255, 0.7);
            font-size: 14px;
        }

        .task-input:focus {
            outline: none;
            border-color: var(--secondary-color);
            box-shadow: 0 0 0 2px rgba(67, 97, 238, 0.1);
        }

        .dark-mode .task-input {
            background: rgba(30, 41, 59, 0.7);
            border-color: rgba(255, 255, 255, 0.1);
            color: var(--light-text);
        }

        .task-add-btn {
            width: 36px;
            height: 36px;
            border-radius: 8px;
            border: none;
            background: var(--secondary-color);
            color: white;
            margin-left: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.2s;
        }

        .task-add-btn:hover {
            background: #3050db;
            transform: translateY(-2px);
        }

        /* Weather Widget Styles */
        .weather-info {
            text-align: center;
            margin: 15px 0;
        }

        .weather-temp {
            font-size: 32px;
            font-weight: 700;
            margin-bottom: 5px;
        }

        .weather-desc {
            font-size: 16px;
            margin-bottom: 5px;
        }

        .weather-location {
            font-size: 14px;
            opacity: 0.7;
        }

        .weather-forecast {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
            text-align: center;
        }

        .forecast-day {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 8px;
            font-size: 14px;
        }

        /* Progress Widget Styles */
        .progress-stats {
            display: flex;
            justify-content: space-between;
            margin-top: 15px;
        }

        .progress-stat {
            text-align: center;
        }

        .stat-label {
            font-size: 12px;
            opacity: 0.7;
            margin-bottom: 5px;
        }

        .stat-value {
            font-size: 18px;
            font-weight: 600;
        }

        /* Notion-like hover effect for text selection */
        ::selection {
            background: rgba(67, 97, 238, 0.2);
        }

        /* Notion-like focus mode - subtle highlight for active widget */
        .widget:focus-within {
            box-shadow: 
                0 15px 35px rgba(0, 0, 0, 0.1), 
                0 0 0 2px var(--secondary-color);
            outline: none;
        }

        /* Notion-like tooltip */
        [data-tooltip] {
            position: relative;
        }

        [data-tooltip]:hover::after {
            content: attr(data-tooltip);
            position: absolute;
            bottom: 100%;
            left: 50%;
            transform: translateX(-50%);
            background: rgba(0, 0, 0, 0.8);
            color: white;
            padding: 5px 10px;
            border-radius: 5px;
            font-size: 12px;
            white-space: nowrap;
            z-index: 10;
            margin-bottom: 5px;
        }

        /* Notion-like mentions */
        .mention {
            background: rgba(67, 97, 238, 0.1);
            color: var(--secondary-color);
            padding: 2px 4px;
            border-radius: 4px;
            font-weight: 500;
        }

        .dark-mode .mention {
            background: rgba(67, 97, 238, 0.2);
        }
    </style>
</head>
<body>
    <!-- Command palette backdrop -->
    <div class="command-backdrop" id="command-backdrop"></div>
    
    <!-- Command palette (Notion style) -->
    <div class="command-palette" id="command-palette">
        <input type="text" class="command-input" id="command-input" placeholder="Type a command or search..." autofocus>
        <div class="command-results">
            <div class="command-item">
                <div class="command-icon"><i class="fas fa-plus"></i></div>
                <div class="command-text">
                    <div class="command-title">Create New Widget</div>
                    <div class="command-description">Add a new widget to your dashboard</div>
                </div>
            </div>
            <div class="command-item">
                <div class="command-icon"><i class="fas fa-palette"></i></div>
                <div class="command-text">
                    <div class="command-title">Change Theme</div>
                    <div class="command-description">Switch between light and dark mode</div>
                </div>
                <div class="command-shortcut">
                    <span class="key">⌘</span>
                    <span class="key">D</span>
                </div>
            </div>
            <div class="command-item">
                <div class="command-icon"><i class="fas fa-columns"></i></div>
                <div class="command-text">
                    <div class="command-title">Rearrange Layout</div>
                    <div class="command-description">Change the dashboard layout</div>
                </div>
            </div>
            <div class="command-item">
                <div class="command-icon"><i class="fas fa-share-alt"></i></div>
                <div class="command-text">
                    <div class="command-title">Share Dashboard</div>
                    <div class="command-description">Share your dashboard with others</div>
                </div>
                <div class="command-shortcut">
                    <span class="key">⌘</span>
                    <span class="key">S</span>
                </div>
            </div>
            <div class="command-item">
                <div class="command-icon"><i class="fas fa-cog"></i></div>
                <div class="command-text">
                    <div class="command-title">Settings</div>
                    <div class="command-description">Configure dashboard settings</div>
                </div>
            </div>
        </div>
    </div>

    <button class="dark-mode-toggle" id="darkModeToggle">
        <i class="fas fa-moon"></i>
    </button>

    <div class="particles" id="particles"></div>

    <div class="app-container">
        <header>
            <div class="header-title">
                <h1>Bento Dashboard <span class="header-emoji">✨</span></h1>
                <p>A personalized <span class="highlight-text">dashboard experience</span> with modern UI</p>
            </div>
            <div class="header-controls">
                <!-- Add search button with command+K shortcut -->
                <div class="search-button" id="search-button">
                    <i class="fas fa-search"></i>
                    <span>Search</span>
                    <div class="search-shortcut">
                        <span class="key">⌘</span>
                        <span class="key">K</span>
                    </div>
                </div>
                <button class="btn btn-primary" id="add-widget-btn">
                    <i class="fas fa-plus"></i>
                    Add Widget
                </button>
            </div>
        </header>

        <div class="bento-container" id="bentoGrid">
            <!-- Widgets will be dynamically created here -->
        </div>
    </div>

    <!-- Particle effects container -->
    <div id="particles"></div>

    <!-- Modal for adding widgets -->
    <div class="modal-overlay" id="addWidgetModal">
        <div class="modal-content glass">
            <div class="modal-header">
                <h2>Add New Widget</h2>
                <button class="modal-close" id="closeModalBtn">&times;</button>
            </div>
            <div class="modal-body">
                <form id="addWidgetForm">
                    <div class="form-group">
                        <label for="widgetTitle">Widget Title</label>
                        <input type="text" id="widgetTitle" placeholder="Enter a title for your widget" required>
                    </div>
                    
                    <div class="form-row">
                        <div class="form-group">
                            <label for="widgetColumns">Width (Columns)</label>
                            <select id="widgetColumns" required>
                                <option value="1">1 Column</option>
                                <option value="2">2 Columns</option>
                                <option value="3" selected>3 Columns</option>
                                <option value="6">Full Width</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="widgetRows">Height (Rows)</label>
                            <select id="widgetRows" required>
                                <option value="1" selected>1 Row</option>
                                <option value="2">2 Rows</option>
                            </select>
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label for="widgetTheme">Theme</label>
                        <select id="widgetTheme">
                            <option value="default" selected>Default</option>
                            <option value="primary">Primary</option>
                            <option value="accent">Accent</option>
                        </select>
                    </div>
                    
                    <div class="form-group">
                        <label for="widgetIcon">Icon</label>
                        <select id="widgetIcon">
                            <option value="chart-line">Analytics</option>
                            <option value="brain">AI</option>
                            <option value="user-circle">Profile</option>
                            <option value="bell">Notifications</option>
                            <option value="cog">Settings</option>
                            <option value="calendar">Calendar</option>
                            <option value="image">Media</option>
                            <option value="file-alt">Documents</option>
                            <option value="comments">Messages</option>
                            <option value="tasks">Tasks</option>
                        </select>
                    </div>
                    
                    <div class="form-group">
                        <label for="widgetKanji">Kanji (Optional)</label>
                        <select id="widgetKanji">
                            <option value="">None</option>
                            <option value="智">智 (Intelligence)</option>
                            <option value="創">創 (Creation)</option>
                            <option value="力">力 (Power)</option>
                            <option value="美">美 (Beauty)</option>
                            <option value="技">技 (Skill)</option>
                            <option value="和">和 (Harmony)</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" id="cancelWidgetBtn">Cancel</button>
                <button class="btn btn-primary" id="saveWidgetBtn">Add Widget</button>
            </div>
        </div>
    </div>

    <script>
        // Create widget DOM element
        function createWidgetElement(widget) {
            const widgetElement = document.createElement('div');
            widgetElement.className = `widget widget-cols-${widget.cols} widget-rows-${widget.rows} glass`;
            
            // Add animation delay based on widget ID for staggered entrance
            widgetElement.style.animationDelay = `${(widget.id - 1) * 0.1}s`;
            
            if (widget.theme !== 'default') {
                widgetElement.classList.add(`widget-theme-${widget.theme}`);
            }
            
            // Add modern styles based on ID to have variety
            if (widget.id % 3 === 0) {
                widgetElement.classList.add('metal');
            } else if (widget.id % 3 === 1) {
                widgetElement.classList.add('glass');
            } else if (widget.id % 4 === 0) {
                widgetElement.classList.add('interactive-3d');
            }
            
            widgetElement.dataset.id = widget.id;
            
            let kanjiElement = widget.kanji ? `<div class="kanji-watermark">${widget.kanji}</div>` : '';
            let waveElement = widget.theme !== 'default' ? '<div class="wave-pattern"></div>' : '';
            let patternElement = widget.id % 2 === 0 ? '<div class="ai-pattern"></div>' : '';
            let badgeElement = widget.theme !== 'default' ? `<div class="ai-badge">${widget.theme === 'primary' ? 'AI-Powered' : 'Creative Tools'}</div>` : '';
            
            widgetElement.innerHTML = `
                <div class="widget-header">
                    <div class="widget-title-with-emoji">
                        <span class="widget-emoji">${getEmojiForIcon(widget.icon)}</span>
                        <div class="widget-title">${widget.title}</div>
                    </div>
                    <div class="widget-actions">
                        <button class="widget-action-btn widget-edit-btn" title="Edit Widget">
                            <i class="fas fa-edit"></i>
                        </button>
                        <button class="widget-action-btn widget-remove-btn" title="Remove Widget">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                </div>
                <div class="widget-content">
                    <p>${widget.content || 'Widget content goes here'}</p>
                    
                    <div class="widget-meta">
                        <span class="widget-tag"><i class="fas fa-${widget.icon || 'chart-line'}"></i> ${getTagForIcon(widget.icon)}</span>
                        <span>Updated just now</span>
                    </div>
                </div>
                ${badgeElement}
                ${kanjiElement}
                ${patternElement}
                ${waveElement}
                <div class="glow-effect"></div>
                <div class="resize-handle"></div>
            `;
            
            bentoGrid.appendChild(widgetElement);
            
            // Setup drag functionality
            setupWidgetDrag(widgetElement);
            
            // Setup resize functionality
            setupWidgetResize(widgetElement);
            
            // Setup remove button
            const removeBtn = widgetElement.querySelector('.widget-remove-btn');
            removeBtn.addEventListener('click', () => removeWidget(widget.id));
            
            // Setup 3D tilt effect
            setupTiltEffect(widgetElement);
            
            // Add click animation to the entire widget
            widgetElement.addEventListener('click', function(e) {
                if (!e.target.closest('.widget-action-btn') && 
                    !e.target.closest('.resize-handle') && 
                    !activeDragWidget && 
                    !activeResizeWidget) {
                    addClickEffect(this);
                }
            });
        }
        
        // Helper to get emoji based on icon
        function getEmojiForIcon(icon) {
            const emojiMap = {
                'chart-line': '📊',
                'brain': '🧠',
                'user-circle': '👤',
                'bell': '🔔',
                'cog': '⚙️',
                'calendar': '📅',
                'image': '🖼️',
                'file-alt': '📄',
                'comments': '💬',
                'tasks': '✅',
                'bolt': '⚡',
                'pen-fancy': '✒️'
            };
            
            return emojiMap[icon] || '✨';
        }
        
        // Helper to get tag text based on icon
        function getTagForIcon(icon) {
            const tagMap = {
                'chart-line': 'Analytics',
                'brain': 'AI',
                'user-circle': 'Profile',
                'bell': 'Notifications',
                'cog': 'Settings',
                'calendar': 'Calendar',
                'image': 'Media',
                'file-alt': 'Documents',
                'comments': 'Messages',
                'tasks': 'Tasks',
                'bolt': 'Quick',
                'pen-fancy': 'Notes'
            };
            
            return tagMap[icon] || 'Widget';
        }
    </script>
</body>
</html> 